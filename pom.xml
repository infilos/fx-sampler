<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.infilos</groupId>
    <artifactId>fx-sampler</artifactId>
    <version>1.4</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javafx.version>18-ea+7</javafx.version>
        <jvm.modules>
            java.base,jdk.management,java.naming,java.sql,java.transaction.xa,java.xml,jdk.unsupported,java.management,java.datatransfer,java.desktop,java.security.jgss,java.xml.crypto,jdk.javadoc,javafx.media,javafx.controls,javafx.fxml,javafx.graphics,javafx.base,javafx.swing,javafx.web,java.logging,jdk.charsets,jdk.incubator.foreign,java.net.http,java.prefs,jdk.crypto.ec,jdk.crypto.cryptoki,jdk.localedata,java.compiler,jdk.net,java.instrument,java.scripting,java.rmi
        </jvm.modules>
        <app.name>FxSampler</app.name>
        <app.version>${project.version}</app.version>
        <mainClass>com.infilos.sampler.Bootstrap</mainClass>
        <maven.build.timestamp.format>yy.ww.WWkkmm</maven.build.timestamp.format>
        <windows.vendor>infilos.com</windows.vendor>
        <windows.upgrade.uuid>628e757d-586a-4d77-90bb-5c0f806746cc</windows.upgrade.uuid>
    </properties>

    <repositories>
        <repository>
            <id>oss.sonatype.org</id>
            <name>Sonatype Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com</url>
        </repository>
        <repository>
            <id>osgeo</id>
            <name>OSGeo Release Repository</name>
            <url>https://repo.osgeo.org/repository/release/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>osgeo-snapshot</id>
            <name>OSGeo Snapshot Repository</name>
            <url>https://repo.osgeo.org/repository/snapshot/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>OpenIMAJ maven releases repository</id>
            <url>https://maven.openimaj.org</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>bintray-jerady-maven</id>
            <name>bintray-plugins</name>
            <url>https://dl.bintray.com/jerady/maven</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- This dependency is a normal Maven dependency, here mainly as an example. -->
        <!-- It brings in other transitive dependencies as well. You can remove it from your project (unless you happen to need to generate test data. -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-core</artifactId>
            <version>12.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-themify-pack</artifactId>
            <version>12.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome-pack</artifactId>
            <version>12.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.0-alpha5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.0-alpha5</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.12.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.12.3</version>
        </dependency>
        <dependency>
            <groupId>earth.worldwind</groupId>
            <artifactId>worldwind</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- This downloads the platform specific JavaFX libraries used by the project. -->
        <!-- For the final installable, the JavaFX dependencies are provided via modules,  -->
        <!-- but by including these here they work nicely with with IDEs and other Maven plugins (e.g. the javafx:run). -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
            <classifier>${platform}</classifier>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources/pkg-config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/pkg-config</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>${project.build.outputDirectory}/properties-from-pom.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                            <options>
                                <option>-XX:+UseZGC</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>
                                <option>--add-modules jdk.incubator.foreign --enable-native-access=ALL-UNNAMED</option>
                                <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>
                                <option>--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>
                                <option>--add-opens=java.base/java.net=ALL-UNNAMED</option>
                            </options>
                        </configuration>
                    </execution>
<!--                    <execution>-->
<!--                        <id>debug</id>-->
<!--                        <configuration>-->
<!--                            <mainClass>${mainClass}</mainClass>-->
<!--                            <options>-->
<!--                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:8000</option>-->
<!--                                <option>-XX:+UseZGC</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-modules jdk.incubator.foreign &#45;&#45;enable-native-access=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=java.base/java.net=ALL-UNNAMED</option>-->
<!--                            </options>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>ide-debug</id>-->
<!--                        <configuration>-->
<!--                            <mainClass>${mainClass}</mainClass>-->
<!--                            <options>-->
<!--                                <option>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</option>-->
<!--                                <option>-XX:+UseZGC</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-modules jdk.incubator.foreign &#45;&#45;enable-native-access=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=java.base/java.net=ALL-UNNAMED</option>-->
<!--                            </options>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>ide-profile</id>-->
<!--                        <configuration>-->
<!--                            <mainClass>${mainClass}</mainClass>-->
<!--                            <options>-->
<!--                                <option>-XX:+UseZGC</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-modules jdk.incubator.foreign &#45;&#45;enable-native-access=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>-->
<!--                                <option>&#45;&#45;add-opens=java.base/java.net=ALL-UNNAMED</option>-->
<!--                                <option>${profiler.jvmargs.arg1}</option>-->
<!--                                <option>${profiler.jvmargs.arg2}</option>-->
<!--                                <option>${profiler.jvmargs.arg3}</option>-->
<!--                                <option>${profiler.jvmargs.arg4}</option>-->
<!--                                <option>${profiler.jvmargs.arg5}</option>-->
<!--                            </options>-->
<!--                        </configuration>-->
<!--                    </execution>-->
                </executions>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>${maven.compiler.target}</release>
                        <fork>true</fork>
                        <compilerArgs>
                            <arg>-J--illegal-access=permit</arg>
                            <arg>--add-exports=javafx.graphics/com.sun.javafx.iio=org.librawfx</arg>
                            <arg>--add-exports=javafx.graphics/com.sun.javafx.iio.common=org.librawfx</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <reporting>
        <plugins>
            <!-- http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->
            <!-- This plugin is a utility to find outdated dependencies in your project. Just run mvn site and
           the resulting HTML reports in target/site will let you know what plugins and dependencies are out of date.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    
    <profiles>
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
            </properties>
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>mac</platform>
            </properties>
        </profile>
        <profile>
            <id>package</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- https://github.com/wiverson/jtoolprovider-plugin -->
                        <groupId>io.github.wiverson</groupId>
                        <artifactId>jtoolprovider-plugin</artifactId>
                        <version>1.0.34</version>
                        <executions>
                            <execution>
                                <id>jlink</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jlink</toolName>
                                    <removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>
                                    <modulePath>${project.basedir}/jmods/${platform}-javafx/javafx-jmods-${javafx.version}/
                                    </modulePath>
                                    <addModules>${jvm.modules}</addModules>
                                    <output>${project.build.directory}/jvm-image</output>
                                    <args>
                                        <arg>--strip-native-commands</arg>
                                        <arg>--no-header-files</arg>
                                        <arg>--strip-debug</arg>
                                        <arg>--no-man-pages</arg>
                                        <arg>--compress=2</arg>
                                    </args>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jpackage</toolName>
                                    <removeDirectories>${project.build.directory}/installer-work</removeDirectories>
                                    <args>@${project.build.directory}/pkg-config/${platform}-jpackage.txt</args>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>