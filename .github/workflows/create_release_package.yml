# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    tags:
      - '*'

jobs:
  
  build-osx:
    
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -Ppackage -f pom.xml
        
    - name: Update Automatic Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "macOS-latest"
        prerelease: true
        title: "macOS Development Build"
        files: ./target/*.pkg

  build-win:
    
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean install -Ppackage -f pom.xml
        
    - name: Update Automatic Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "Windows-latest"
        prerelease: true
        title: "Windows Development Build"
        files: .\target\*.msi

  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -Ppackage -f pom.xml
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Update Automatic Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "Ubuntu-latest"
        prerelease: true
        title: "Ubuntu Development Build"
        files: ./target/*.deb
